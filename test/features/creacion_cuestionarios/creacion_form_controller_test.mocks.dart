// Mocks generated by Mockito 5.0.15 from annotations
// in inspecciones/test/features/creacion_cuestionarios/creacion_form_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i2;
import 'package:inspecciones/domain/api/api_failure.dart' as _i7;
import 'package:inspecciones/infrastructure/moor_database.dart' as _i4;
import 'package:inspecciones/infrastructure/repositories/cuestionarios_repository.dart'
    as _i5;
import 'package:inspecciones/infrastructure/tablas_unidas.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeCuestionarioConContratistaYModelos_1 extends _i1.Fake
    implements _i3.CuestionarioConContratistaYModelos {}

class _FakeSistema_2 extends _i1.Fake implements _i4.Sistema {}

class _FakeSubSistema_3 extends _i1.Fake implements _i4.SubSistema {}

/// A class which mocks [CuestionariosRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCuestionariosRepository extends _i1.Mock
    implements _i5.CuestionariosRepository {
  MockCuestionariosRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.ApiFailure, _i2.Unit>>
      subirCuestionariosPendientes() => (super.noSuchMethod(
              Invocation.method(#subirCuestionariosPendientes, []),
              returnValue: Future<_i2.Either<_i7.ApiFailure, _i2.Unit>>.value(
                  _FakeEither_0<_i7.ApiFailure, _i2.Unit>()))
          as _i6.Future<_i2.Either<_i7.ApiFailure, _i2.Unit>>);
  @override
  _i6.Future<_i2.Either<_i7.ApiFailure, _i2.Unit>> subirCuestionario(
          _i4.Cuestionario? cuestionario) =>
      (super.noSuchMethod(Invocation.method(#subirCuestionario, [cuestionario]),
              returnValue: Future<_i2.Either<_i7.ApiFailure, _i2.Unit>>.value(
                  _FakeEither_0<_i7.ApiFailure, _i2.Unit>()))
          as _i6.Future<_i2.Either<_i7.ApiFailure, _i2.Unit>>);
  @override
  _i6.Future<dynamic> descargarCuestionarios(
          String? savedir, String? nombreJson) =>
      (super.noSuchMethod(
          Invocation.method(#descargarCuestionarios, [savedir, nombreJson]),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> descargarFotos(String? savedir, String? nombreZip) =>
      (super.noSuchMethod(
          Invocation.method(#descargarFotos, [savedir, nombreZip]),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  _i6.Stream<List<_i4.Cuestionario>> getCuestionariosLocales() =>
      (super.noSuchMethod(Invocation.method(#getCuestionariosLocales, []),
              returnValue: Stream<List<_i4.Cuestionario>>.empty())
          as _i6.Stream<List<_i4.Cuestionario>>);
  @override
  _i6.Future<dynamic> eliminarCuestionario(_i4.Cuestionario? cuestionario) =>
      (super.noSuchMethod(
          Invocation.method(#eliminarCuestionario, [cuestionario]),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  _i6.Future<_i3.CuestionarioConContratistaYModelos> getModelosYContratista(
          int? cuestionarioId) =>
      (super.noSuchMethod(
              Invocation.method(#getModelosYContratista, [cuestionarioId]),
              returnValue: Future<_i3.CuestionarioConContratistaYModelos>.value(
                  _FakeCuestionarioConContratistaYModelos_1()))
          as _i6.Future<_i3.CuestionarioConContratistaYModelos>);
  @override
  _i6.Future<List<_i3.IBloqueOrdenable>> cargarCuestionario(
          int? cuestionarioId) =>
      (super.noSuchMethod(
              Invocation.method(#cargarCuestionario, [cuestionarioId]),
              returnValue: Future<List<_i3.IBloqueOrdenable>>.value(
                  <_i3.IBloqueOrdenable>[]))
          as _i6.Future<List<_i3.IBloqueOrdenable>>);
  @override
  _i6.Future<List<_i4.Cuestionario>> getCuestionarios(
          String? tipoDeInspeccion, List<String>? modelos) =>
      (super.noSuchMethod(
              Invocation.method(#getCuestionarios, [tipoDeInspeccion, modelos]),
              returnValue:
                  Future<List<_i4.Cuestionario>>.value(<_i4.Cuestionario>[]))
          as _i6.Future<List<_i4.Cuestionario>>);
  @override
  _i6.Future<List<String>> getTiposDeInspecciones() =>
      (super.noSuchMethod(Invocation.method(#getTiposDeInspecciones, []),
              returnValue: Future<List<String>>.value(<String>[]))
          as _i6.Future<List<String>>);
  @override
  _i6.Future<List<String>> getModelos() =>
      (super.noSuchMethod(Invocation.method(#getModelos, []),
              returnValue: Future<List<String>>.value(<String>[]))
          as _i6.Future<List<String>>);
  @override
  _i6.Future<List<_i4.Contratista>> getContratistas() => (super.noSuchMethod(
          Invocation.method(#getContratistas, []),
          returnValue: Future<List<_i4.Contratista>>.value(<_i4.Contratista>[]))
      as _i6.Future<List<_i4.Contratista>>);
  @override
  _i6.Future<List<_i4.Sistema>> getSistemas() =>
      (super.noSuchMethod(Invocation.method(#getSistemas, []),
              returnValue: Future<List<_i4.Sistema>>.value(<_i4.Sistema>[]))
          as _i6.Future<List<_i4.Sistema>>);
  @override
  _i6.Future<_i4.Sistema> getSistemaPorId(int? sistemaId) =>
      (super.noSuchMethod(Invocation.method(#getSistemaPorId, [sistemaId]),
              returnValue: Future<_i4.Sistema>.value(_FakeSistema_2()))
          as _i6.Future<_i4.Sistema>);
  @override
  _i6.Future<_i4.SubSistema> getSubSistemaPorId(int? subSistemaId) => (super
          .noSuchMethod(Invocation.method(#getSubSistemaPorId, [subSistemaId]),
              returnValue: Future<_i4.SubSistema>.value(_FakeSubSistema_3()))
      as _i6.Future<_i4.SubSistema>);
  @override
  _i6.Future<List<_i4.SubSistema>> getSubSistemas(_i4.Sistema? sistema) =>
      (super.noSuchMethod(Invocation.method(#getSubSistemas, [sistema]),
              returnValue:
                  Future<List<_i4.SubSistema>>.value(<_i4.SubSistema>[]))
          as _i6.Future<List<_i4.SubSistema>>);
  @override
  _i6.Future<dynamic> guardarCuestionario(
          _i4.CuestionariosCompanion? cuestionario,
          List<_i4.CuestionarioDeModelosCompanion>? cuestionariosDeModelos,
          List<Object>? bloquesForm) =>
      (super.noSuchMethod(
          Invocation.method(#guardarCuestionario,
              [cuestionario, cuestionariosDeModelos, bloquesForm]),
          returnValue: Future<dynamic>.value()) as _i6.Future<dynamic>);
  @override
  String toString() => super.toString();
}
